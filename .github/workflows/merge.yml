on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

name: "Merge"

jobs:
  merge:
    name: "Merge"

    runs-on: "ubuntu-latest"

    if: >
      success() &&
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false &&
      contains(github.event.pull_request.labels.*.name, 'automerge')

    steps:
      - name: "Request review from @nucleos-bot"
        uses: "actions/github-script@v3"
        with:
          github-token: ${{ secrets.ORGANIZATION_ADMIN_TOKEN }}
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo
            const reviewers = [
              "nucleos-bot",
            ]
            await github.pulls.requestReviewers({
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
              reviewers: reviewers,
            })

      - name: "Assign @nucleos-bot"
        uses: "actions/github-script@v3"
        with:
          github-token: ${{ secrets.ORGANIZATION_ADMIN_TOKEN }}
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo
            const reviewers = [
              "nucleos-bot",
            ]
            await github.issues.addAssignees({
              assignees: reviewers,
              issue_number: pullRequest.number,
              owner: repository.owner,
              repo: repository.repo,
            })

      - name: "Approve pull request"
        uses: "actions/github-script@v3"
        if: "github.actor != 'nucleos-bot'"
        with:
          github-token: ${{ secrets.ORGANIZATION_ADMIN_TOKEN }}
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo
            await github.pulls.createReview({
              event: "APPROVE",
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
            })

      - name: "Merge pull request"
        uses: "actions/github-script@v3"
        with:
          github-token: ${{ secrets.ORGANIZATION_ADMIN_TOKEN }}
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo
            await github.pulls.merge({
              merge_method: "merge",
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
            })
